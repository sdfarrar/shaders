// Each #kernel tells which function to compile; you can have many kernels
#pragma kernel GameOfLife

float Width;
float Height;
sampler2D Input;

// Create a RenderTexture with enableRandomWrite flag and set it
// with cs.SetTexture
RWTexture2D<float4> Result;

// 1. Any live cell with fewer than two live neighbors dies, as if by under population.
// 2. Any live cell with two or three live neighbors lives on to the next generation.
// 3. Any live cell with more than three live neighbors dies, as if by overpopulation.
// 4. Any dead cell with exactly three live neighbors becomes a live cell, as if by reproduction.

[numthreads(8,8,1)]
void GameOfLife (uint3 id : SV_DispatchThreadID)
{
	float2 position = float2((id.x)/Width, (id.y)/Height);
	float2 pixelSize = float2(1.0/Width, 1.0/Height);

	//TODO get neighbors of current pixel
	//TODO apply rules
	//TODO return white or black

	//Result[id.xy] = float4(id.x & id.y, (id.x & 15)/15.0, (id.y & 15)/15.0, 0.0);
}
